{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the web app that you wish to create."
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "defaultValue": "F1",
      "metadata": {
        "description": "The pricing tier for the hosting plan. For any tier >=B1 Always on will be activated."
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/attilaszasz/node-red-azure-webapp.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    }
  },
  "variables": {
    "alwaysOnValue": {
      "F1": "false",
      "D1": "false",
      "B1": "true",
      "B2": "true",
      "B3": "true",
      "S1": "true",
      "S2": "true",
      "S3": "true",
      "P1": "true",
      "P2": "true",
      "P3": "true",
      "P4": "true"
    },
    "hostingPlanName": "[concat(parameters('siteName'),'Hosting')]"

  },
  "resources": [
{
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[parameters('siteName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Log Analytics",
        "ProjectName": "[parameters('siteName')]"
      },
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },    
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('siteName')]",
      "location": "[resourceGroup().location]",
      "kind": "string",
      "tags": {
        "displayName": "AppInsight",
        "ProjectName": "[parameters('siteName')]"
      },
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('siteName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('siteName'))]"
      ]
    },    
    {
      "apiVersion": "2021-02-01",
      "name": "[variables('hostingPlanName')]",
      "tags": {
        "displayName": "hosting"
      },
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2021-02-01",
      "name": "[parameters('siteName')]",
      "tags": {
        "displayName": "site"
      },
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "app,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('siteName'))]"     
      ],
      "properties": {
        "serverFarmId": "[variables('hostingPlanName')]",
        "httpsOnly": true,

        "siteConfig": {
          "webSocketsEnabled": true,
          "alwaysOn": "[variables('alwaysOnValue')[parameters('sku')]]",
          "phpVersion":"",
          "minTlsVersion": "1.2"
        }
      },
      "resources": [
        {
          "apiVersion": "2021-02-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', parameters('siteName'), 'appsettings')]",
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('siteName'))).InstrumentationKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('siteName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('siteName'))]",
        "[resourceId('Microsoft.Web/sites/siteextensions', parameters('siteName'), 'Microsoft.ApplicationInsights.AzureWebSites')]"
      ]
    },    
    {
      "type": "Microsoft.Web/sites/siteextensions",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', parameters('siteName'), 'Microsoft.ApplicationInsights.AzureWebSites')]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('siteName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
      ]
    },    
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', parameters('siteName'), 'logs')]",
      "properties": {
        "applicationLogs": {
          "fileSystem": {
            "level": "Warning"
          }
        },
        "httpLogs": {
          "fileSystem": {
            "retentionInMb": 40,
            "enabled": true
          }
        },
        "failedRequestsTracing": {
          "enabled": true
        },
        "detailedErrorMessages": {
          "enabled": true
        },
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "NODE|14-lts",
        "use32BitWorkerProcess": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
      ]
    }
  ]
}